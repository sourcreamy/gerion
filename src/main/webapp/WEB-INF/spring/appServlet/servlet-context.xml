<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://mybatis.org/schema/mybatis-spring
		http://mybatis.org/schema/mybatis-spring-1.2.xsd	
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
			http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		">
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

   <!-- <mvc:interceptors>
        <mvc:interceptor>
        <mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/index.do"/>
			<mvc:exclude-mapping path="/loginPersist.do"/>
			<mvc:exclude-mapping path="/nopermission.do"/>
			<mvc:exclude-mapping path="/duplicateIdChk.do"/>
			
			
			<beans:bean class="kr.co.carrier.interceptor.UserLoginCheckInterceptor" />
 		</mvc:interceptor> -->
		<!-- <mvc:interceptor>
        <mvc:mapping path="/**"/>
        	<mvc:exclude-mapping path="/admin/login.do"/>
        	<mvc:exclude-mapping path="/admin/loginPersist.do"/>
        	<mvc:exclude-mapping path="/admin/nopermission.do"/>
			<beans:bean class="kr.co.pickball.interceptor.UsePickballCheckInterceptor" />
		</mvc:interceptor> -->
   <!--  </mvc:interceptors> -->




	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />


<!-- view name tanslator -->
    <beans:bean id="viewNameTranslator" class="org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator" />


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<beans:property value="1" name="order" />
		<beans:property name="contentNegotiationManager">
			<beans:bean class="org.springframework.web.accept.ContentNegotiationManager">
				<beans:constructor-arg>
					<beans:bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
						<beans:constructor-arg>
							<beans:map>
								<beans:entry value="application/json" key="json" />
								<beans:entry value="application/xml" key="xml" />
							</beans:map>
						</beans:constructor-arg>
					</beans:bean>
				</beans:constructor-arg>
			</beans:bean>
		</beans:property>
        <beans:property name="viewResolvers">
            <beans:list>
                <beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
                <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
                    <beans:property name="prefix" value="/WEB-INF/views/jsp/" />
                    <beans:property name="suffix" value=".jsp" />
                    <beans:property name="order"  value="2"/>
                </beans:bean>
            </beans:list>
        </beans:property>
	</beans:bean>
	
	<context:component-scan base-package="kr.co.gerion" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
    </context:component-scan>
	
	
	
		<util:properties id="dbProp" location="classpath:/config/db_properties.xml" />
	<util:properties id="appProp" location="classpath:/config/app_properties.xml" />
	
		<!-- 데이터베이스 접속을 위한 설정 -->
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="#{dbProp['jdbc.url']}" />
		<beans:property name="username" value="#{dbProp['jdbc.username']}" />
		<beans:property name="password" value="#{dbProp['jdbc.password']}" />
	</beans:bean>
	
	
	<!-- 트랜잭션 사용 -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<tx:annotation-driven transaction-manager="transactionManager"/>
	
    <beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<beans:property name="dataSource" ref="dataSource" />
        <beans:property name="configLocation" value="classpath:/config/mybatis_config.xml"/>
        <beans:property name="mapperLocations">
		 <beans:array>
		   <beans:value>classpath:/mapper/*.xml</beans:value>
		  </beans:array>
        </beans:property>
    </beans:bean>
     
    <beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <beans:constructor-arg index="0" ref="sqlSession"/>
    </beans:bean>  

	<mybatis-spring:scan   base-package="kr.co.gerion.mapper" />

	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize">
			<beans:value>102400000</beans:value>
		</beans:property>
	</beans:bean>
	

	
</beans:beans>
